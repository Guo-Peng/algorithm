package leetcode;

import java.util.*;

/**
 * 389
 * Given two strings s and t which consist of only lowercase letters.
 * <p>
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * <p>
 * Find the letter that was added in t.
 * Example:
 * <p>
 * Input:
 * s = "abcd"
 * t = "abcde"
 * <p>
 * Output:
 * e
 * <p>
 * Explanation:
 * 'e' is the letter that was added.
 */

public class FindTheDifference {
    /**
     * solution 1  31ms
     */
    public static char findTheDifference1(String s, String t) {
        HashMap<Character, Integer> count = new HashMap<>();
        count.put(t.charAt(0), 1);
        for (int i = 0; i < s.length(); i++) {
            count.put(s.charAt(i), count.getOrDefault(s.charAt(i), 0) - 1);
            count.put(t.charAt(i + 1), count.getOrDefault(t.charAt(i + 1), 0) + 1);
        }
        for (Map.Entry<Character, Integer> entry : count.entrySet()) {
            if (entry.getValue() != 0)
                return entry.getKey();
        }
        return ' ';
    }

    /**
     * solution 2  9ms
     * 求不同即用两个集合影响相同的变量,最终根据结果的值来定位不同
     */

    public static char findTheDifference(String s, String t) {
        char[] arrs = s.toCharArray();
        char[] arrt = t.toCharArray();

        int ascii = 0;
        ascii += (int) arrt[0];

        for (int i = 0; i < arrs.length; i++) {
            ascii -= (int) arrs[i];
            ascii += (int) arrt[i + 1];
        }
        return (char) ascii;
    }

    public static void main(String[] args) {
        System.out.println(findTheDifference("abcd", "abcde"));
    }
}
